import streamlit as st
import pandas as pd
import altair as alt
import data_fetcher
from datetime import datetime

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏
st.set_page_config(page_title="Present for volodik", page_icon="üé¨")
st.title("–°–æ—Ñ—Ç –¥–ª—è –°–ª–∞–¥–µ–Ω—å–∫–æ–≥–æ")
st.header('–¢–∞–±–ª–∏—Ü—è –∑–∞–º–æ–≤–ª–µ–Ω—å:')

# –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–ª—é—á–∞ API –∑ —Å–µ–∫—Ä–µ—Ç—ñ–≤
api_key = st.secrets["key"]

# –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∫–µ—à—É–≤–∞–Ω–Ω—è –¥–ª—è —Ñ—É–Ω–∫—Ü—ñ—ó –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
@st.cache_data
def load_data(api_key):
    return data_fetcher.fetch_data(api_key)

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ç–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —É session_state
def fetch_and_store_data():
    df_new = load_data(api_key)
    current_date = datetime.now().date()
    date = current_date.strftime('%Y-%m-%d')
    st.session_state['df_new'] = df_new
    st.session_state['date'] = date

# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
if st.button('–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–∞–Ω—ñ'):
    fetch_and_store_data()
    st.success("–î–∞–Ω—ñ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")

# –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö, —è–∫—â–æ –≤–æ–Ω–∏ –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ
if 'df_new' in st.session_state:
    date = st.session_state.get('date', '–ù–µ–≤—ñ–¥–æ–º–∞ –¥–∞—Ç–∞')
    st.write(f'–î–∞–Ω—ñ –∑–∞ {date}')
    st.dataframe(st.session_state['df_new'])
else:
    st.write("–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö.")

# –°–µ–∫—Ü—ñ—è –¥–ª—è –ø–æ–±—É–¥–æ–≤–∏ –≥—Ä–∞—Ñ—ñ–∫–∞
st.subheader('–ì—Ä–∞—Ñ—ñ–∫:')

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –¥–∞–Ω—ñ –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ
if 'df_new' in st.session_state:
    df_new = st.session_state['df_new']

    # –í–∏–±—ñ—Ä —Å—Ç–æ–≤–ø—Ü—ñ–≤ –¥–ª—è –≥—Ä–∞—Ñ—ñ–∫–∞
    x_axis = st.selectbox(
        '–û–±–µ—Ä—ñ—Ç—å —Å—Ç–æ–≤–ø–µ—Ü—å –¥–ª—è –æ—Å—ñ X',
        options=df_new.columns,
        index=df_new.columns.get_loc("–ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è") if "–ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è" in df_new.columns else 0
    )
    y_axis = st.selectbox(
        '–û–±–µ—Ä—ñ—Ç—å —Å—Ç–æ–≤–ø–µ—Ü—å –¥–ª—è –æ—Å—ñ Y',
        options=df_new.columns,
        index=df_new.columns.get_loc("–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞") if "–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞" in df_new.columns else 1
    )

    # –ü–æ–±—É–¥–æ–≤–∞ –≥—Ä–∞—Ñ—ñ–∫–∞ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é Altair
    chart = alt.Chart(df_new).mark_bar().encode(
        x=alt.X(x_axis, sort=None),
        y=y_axis,
        tooltip=[x_axis, y_axis]
    ).interactive()

    st.altair_chart(chart, use_container_width=True)
else:
    st.write("–ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ –¥–∞–Ω—ñ –¥–ª—è –ø–æ–±—É–¥–æ–≤–∏ –≥—Ä–∞—Ñ—ñ–∫–∞.")
